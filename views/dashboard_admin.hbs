<div class="container">

  <h2>Table of Users</h2>
  <table class="table table-striped">
    <thead>
      <tr>
        <th scope="col">ID</th>
        <th scope="col">EMAIL</th>
        <th scope="col">USERNAME</th>
        <th scope="col">ACTIONS</th>
      </tr>
    </thead>
    <tbody id="users-table-body"></tbody>
  </table>

  <h2>Table of Admins</h2>
  <table class="table table-striped">
    <thead>
      <tr>
        <th scope="col">ID</th>
        <th scope="col">EMAIL</th>
        <th scope="col">USERNAME</th>
      </tr>
    </thead>
    <tbody id="admins-table-body"></tbody>
  </table>

</div>

<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Delete</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">Are you sure you want to delete this user?</div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
      </div>
    </div>
  </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
  fetch('/admin/api/users')
    .then(response => response.json())
    .then(users => {
      const usersTableBody = document.getElementById('users-table-body');
      users.forEach(user => {
        const userRow = `
          <tr>
            <td>${user.id}</td>
            <td>${user.email}</td>
            <td>${user.username}</td>
            <td>
              <div class="actions-btns">
                <form action="/admin/dashboard_admin/user/${user.id}" method="GET">
                  <button type="submit" class="btn btn-info">INFO</button>
                </form>
                <form action="/admin/delete_user" method="POST" class="delete-user-form">
                  <input type="hidden" name="userId" value="${user.id}">
                  <button type="button" class="btn btn-danger delete-button">DELETE</button>
                </form>
              </div>
            </td>
          </tr>
        `;
        usersTableBody.insertAdjacentHTML('beforeend', userRow);
      });

      const deleteButtons = document.querySelectorAll('.delete-button');
      const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');

      deleteButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          const form = this.parentElement; 
          const userId = form.querySelector('input[name="userId"]').value; 
          $('#confirmDeleteModal').modal('show');

          confirmDeleteBtn.addEventListener('click', function() {
            fetch('/admin/delete_user', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ userId: userId })
            })
            .then(response => {
              if (!response.ok) {
                throw new Error('Network response was not ok');
              }
              const row = form.closest('tr');
              if (row) {
                row.remove();
              }
              $('#confirmDeleteModal').modal('hide');
            })
            .catch(error => {
              console.error('Error:', error);
              alert('Failed to delete user. Please try again.');
              $('#confirmDeleteModal').modal('hide');
            });
          });
        });
      });
    })
    .catch(error => {
      console.error('Error fetching users:', error);
    });

  fetch('/admin/api/admins')
    .then(response => response.json())
    .then(admins => {
      const adminsTableBody = document.getElementById('admins-table-body');
      admins.forEach(admin => {
        const adminRow = `
          <tr>
            <td>${admin.id}</td>
            <td>${admin.email}</td>
            <td>${admin.username}</td>
          </tr>
        `;
        adminsTableBody.insertAdjacentHTML('beforeend', adminRow);
      });
    })
    .catch(error => {
      console.error('Error fetching admins:', error);
    });
});
</script>
