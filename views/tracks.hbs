<div class="container">
  <h1 id="album-title"></h1>
  <h2 id="album-artist"></h2>
  <div id="layout-row" class="row"></div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', async function() {
    const albumId = window.location.pathname.split('/').pop(); 
    const albumTitleElement = document.getElementById('album-title');
    const albumArtistElement = document.getElementById('album-artist');
    const layoutRow = document.getElementById('layout-row');

    try {
      const response = await fetch(`/api/albums/${albumId}/tracks`);
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const data = await response.json();
      const { tracks, albumImageUrl, albumTitle, albumArtist } = data;

      albumTitleElement.textContent = albumTitle;
      albumArtistElement.textContent = albumArtist;

      tracks.forEach(track => {
        const trackHTML = `
          <div class="col-5 col-sm-4 col-md-3 col-lg-3 mt-5 mb-2 pr-2">
            <div class="card">
              <span class="song">
                <div class="image-overlay">
                  <img class="card-img-top" id="songImageOne" src="${albumImageUrl}" alt="Card image cap">
                  <button class="bi bi-plus-circle-fill icon add-to-playlist-btn"
                          data-track-id="${track.id}"></button>
                </div>
                <div class="overlay" data-album-image="${albumImageUrl}" data-song-name="${track.name}">
                  <h5 class="album-name pt-4 pb-2" id="songNameOne">
                    <strong>${track.name}</strong><br>
                    <span class="artist-name">${track.artists[0].name}</span>
                  </h5>
                </div>
              </span>
            </div>
          </div>
        `;

        layoutRow.insertAdjacentHTML('beforeend', trackHTML);
      });



      const addTrackButtons = document.querySelectorAll('.add-to-playlist-btn');
      addTrackButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          const trackId = this.getAttribute('data-track-id');

          fetch('/playlist_tracks/add', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ trackId: trackId })
          })
          .then(response => {
            if (response.status === 401) {
              window.location.href = '/authentication/login';
              throw new Error('User not logged in');
            }
            if (response.status === 400) {
              window.location.href = '/playlist_tracks';
              throw new Error('Song already exists in playlist');
            }
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            window.location.href = '/playlist_tracks';
          })
          .catch(error => {
            console.error('Error adding song to playlist:', error);
          });
        });
      });

    } catch (error) {
      console.error('Error fetching tracks:', error);
    }
  });
</script>
